import{_ as a,c as s,a as e,o as t}from"./app-CFSRsA5l.js";const c={};function p(l,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="自定义配置" tabindex="-1"><a class="header-anchor" href="#自定义配置"><span>自定义配置</span></a></h1><h2 id="client" tabindex="-1"><a class="header-anchor" href="#client"><span>Client</span></a></h2><blockquote><p>springboot3 使用 WebClient + RestClient，springboot2 使用 WebClient</p></blockquote><h3 id="webclient" tabindex="-1"><a class="header-anchor" href="#webclient"><span>WebClient</span></a></h3><blockquote><p>支持自定义 webClientBuilder，覆盖默认实例</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">WebClient<span class="token punctuation">.</span>Builder</span> <span class="token function">webClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">HttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">protocol</span><span class="token punctuation">(</span><span class="token class-name">HttpProtocol</span><span class="token punctuation">.</span><span class="token constant">HTTP11</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">WebClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">defaultHeader</span><span class="token punctuation">(</span><span class="token class-name">HttpHeaders</span><span class="token punctuation">.</span><span class="token constant">CONTENT_TYPE</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON_VALUE</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">clientConnector</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ReactorClientHttpConnector</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="restclient" tabindex="-1"><a class="header-anchor" href="#restclient"><span>RestClient</span></a></h3><blockquote><p>支持自定义 restClientBuilder，覆盖默认实例</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">RestClient<span class="token punctuation">.</span>Builder</span> <span class="token function">restClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">defaultHeader</span><span class="token punctuation">(</span><span class="token class-name">HttpHeaders</span><span class="token punctuation">.</span><span class="token constant">CONTENT_TYPE</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON_VALUE</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)]))}const o=a(c,[["render",p],["__file","custom.html.vue"]]),u=JSON.parse('{"path":"/config/custom.html","title":"自定义配置","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"自定义配置","description":null},"git":{"updatedTime":1744879838000,"contributors":[{"name":"yanghq","username":"yanghq","email":"1040926235@qq.com","commits":10,"url":"https://github.com/yanghq"}],"changelog":[{"hash":"ec8bbd85b1aeb127c97f04bea8c8bf81c805158a","time":1744879838000,"email":"1040926235@qq.com","author":"yanghq","message":"doc: update config"},{"hash":"31acfeffa099739163efba8f145d358b14f5adaf","time":1744341714000,"email":"1040926235@qq.com","author":"yanghq","message":"doc: child chunks"},{"hash":"c6c2edb1fab4b549428e9df63508baf42bf775d8","time":1744263215000,"email":"1040926235@qq.com","author":"yanghq","message":"doc: update custom config"},{"hash":"803ef646a0fb6e16d75378fbc0e02bcca323daf5","time":1742794763000,"email":"1040926235@qq.com","author":"yanghq","message":"feat: WebClient Specifies version as Http1.1, Add the spring-boot-starter-reactor-netty dependency"},{"hash":"a3edef7d7b8e7837f4fcb5207573907ab2f01517","time":1742462004000,"email":"1040926235@qq.com","author":"yanghq","message":"feat: Move DifyProperties email\\\\password under DifyProperties server"},{"hash":"b5ac0e69faaf27535567fe23e99bddf27eb4c217","time":1742461373000,"email":"1040926235@qq.com","author":"yanghq","message":"feat: rename DifyServerProperties DifyProperties"},{"hash":"6530be7f860135081c184d78405a48d04f65ea9c","time":1742434053000,"email":"1040926235@qq.com","author":"yanghq","message":"doc: Extract difyWorkflowWebClient"},{"hash":"b4d6b27e9b443d94c86b682b8715996ecf11575c","time":1742433555000,"email":"1040926235@qq.com","author":"yanghq","message":"doc: Extract difyChatWebClient"},{"hash":"eab675fa5615f7cc4053688dbe42b9266653caf7","time":1742433355000,"email":"1040926235@qq.com","author":"yanghq","message":"reformat code"},{"hash":"6cbbf686fa7595403827e007bfd7bca72931597e","time":1742377434000,"email":"1040926235@qq.com","author":"yanghq","message":"doc: update dataset doc"}]},"filePathRelative":"config/custom.md"}');export{o as comp,u as data};
